"use strict";

function DummyContext() {}

const contextPrototype = [
  "drawImage",
  "beginPath",
  "stroke",
  "fillRect",
  "fillText",
  "bindBuffer",
  "createBuffer",
  "createProgram",
  "getInternalformatParameter",
  "getExtension",
  "getError",
  "shaderSource",
  "compileShader",
  "attachShader",
  "deleteShader",
  "linkProgram",
  "getProgramParameter",
  "getShaderParameter",
  "deleteProgram",
  "enable",
  "disable",
  "blendFunc",
  "pixelStorei",
  "texParameteri",
  "frontFace",
  "blendEquationSeparate",
  "createTexture",
  "bindTexture",
  "texImage2D",
  "activeTexture",
  "canvas",
  "globalAlpha",
  "globalCompositeOperation",
  "filter",
  "imageSmoothingEnabled",
  "imageSmoothingQuality",
  "strokeStyle",
  "fillStyle",
  "shadowOffsetX",
  "shadowOffsetY",
  "shadowBlur",
  "shadowColor",
  "lineWidth",
  "lineCap",
  "lineJoin",
  "miterLimit",
  "lineDashOffset",
  "font",
  "textAlign",
  "textBaseline",
  "direction",
  "clip",
  "createImageData",
  "createLinearGradient",
  "createPattern",
  "createRadialGradient",
  "drawFocusIfNeeded",
  "fill",
  "getContextAttributes",
  "getLineDash",
  "getTransform",
  "isPointInPath",
  "isPointInStroke",
  "measureText",
  "putImageData",
  "save",
  "scale",
  "setLineDash",
  "setTransform",
  "strokeText",
  "transform",
  "translate",
  "arc",
  "arcTo",
  "bezierCurveTo",
  "clearRect",
  "closePath",
  "ellipse",
  "lineTo",
  "moveTo",
  "quadraticCurveTo",
  "rect",
  "resetTransform",
  "restore",
  "rotate",
  "strokeRect",
];

DummyContext.prototype = contextPrototype.reduce(
  (context, key) => ({
    ...context,
    [key]: () => ({}),
  }),
  {
    getImageData: () => false,
  }
);

module.exports = DummyContext;
